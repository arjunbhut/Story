{"ast":null,"code":"export const sellerReducer = (state = [], {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case \"FETCH_ALL\":\n      state = [];\n      return [...state, ...payload];\n\n    case \"REGISTER\":\n      return [...state, payload];\n\n    case \"SEARCH_BY\":\n      const n = payload.name;\n      console.log(typeof n);\n      const v = payload.value;\n      console.log(n + \" \" + v);\n      const new_values = state.filter(function (el) {\n        return el.n == v;\n      });\n      console.log(new_values);\n      console.log(state);\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/arjunbhut/Documents/practise/client/src/reducers/Seller.js"],"names":["sellerReducer","state","type","payload","n","name","console","log","v","value","new_values","filter","el"],"mappings":"AAGA,OAAO,MAAMA,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAb,KAA+B;AAEtD,UAAOD,IAAP;AACE,SAAK,WAAL;AACID,MAAAA,KAAK,GAAG,EAAR;AACF,aAAO,CAAC,GAAGA,KAAJ,EAAU,GAAGE,OAAb,CAAP;;AACF,SAAK,UAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAUE,OAAV,CAAP;;AACF,SAAK,WAAL;AACE,YAAMC,CAAC,GAAGD,OAAO,CAACE,IAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,CAAnB;AACA,YAAMI,CAAC,GAAGL,OAAO,CAACM,KAAlB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,GAAG,GAAJ,GAAWI,CAAvB;AACA,YAAME,UAAU,GAAGT,KAAK,CAACU,MAAN,CAAa,UAAUC,EAAV,EAAa;AAC3C,eAAOA,EAAE,CAACR,CAAH,IAAQI,CAAf;AACD,OAFkB,CAAnB;AAGAF,MAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,aAAOA,KAAP;;AAGF;AACE,aAAOA,KAAP;AApBJ;AAwBL,CA1BM","sourcesContent":["\n\n\nexport const sellerReducer = (state = [], {type,payload}) =>{\n\n      switch(type) {\n        case \"FETCH_ALL\":\n            state = [];\n          return [...state,...payload];\n        case \"REGISTER\":\n          return [...state,payload];\n        case \"SEARCH_BY\":\n          const n = payload.name;\n          console.log(typeof(n));\n          const v = payload.value;\n          console.log(n + \" \"  + v);\n          const new_values = state.filter(function (el){\n            return el.n == v;\n          })\n          console.log(new_values);\n          console.log(state);\n          return state;\n\n\n        default:\n          return state;\n\n      }\n\n}"]},"metadata":{},"sourceType":"module"}